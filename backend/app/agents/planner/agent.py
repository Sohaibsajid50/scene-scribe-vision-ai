from dotenv import load_dotenv
from google import genai
import os
from google.adk.agents import Agent, LlmAgent
from google.genai import types

load_dotenv()

client = genai.Client(api_key=os.getenv("GOOGLE_API_KEY"))

# def upload_to_gemini(file_path: str):
#     """
#     Uploads a file from a given path to Gemini.

#     Args:
#         file_path: The local path to the file to upload.

#     Returns:
#         The uploaded file object from Gemini.
#     """
#     myfile = client.files.upload(file=file_path)
#     return myfile

async def generate_from_file(file_id: str, prompt: str):
    file_reference = client.files.get(name=file_id)
    response = client.models.generate_content(
        model="gemini-2.5-flash-preview-05-20",
        contents=[file_reference, prompt]
    )
    return response

def generate_from_youtube(
    youtube_url: str,
    prompt: str = "Summarize this video in detail."
) -> str:
    """
    Generates text output from a YouTube video using the Gemini model.

    This function uses the Gemini API to process the provided YouTube URL
    along with an optional prompt, returning the generated text.

    Args:
        youtube_url: The URL of the YouTube video to process.
            Example: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        prompt: An optional textual instruction for the model.
            Defaults to "Summarize this video in detail."

    Returns:
        str: The text generated by the Gemini model based on the video
            and prompt. Example: "This video explains..."
    """
    response = client.models.generate_content(
        model="gemini-2.5-flash-preview-05-20",
        contents=[
            types.Part(
                file_data=types.FileData(file_uri=youtube_url)
            ),
            types.Part(text=prompt)
        ]
    )
    return response.text


planner_agent = LlmAgent(
                    name="Planner",
                    model="gemini-1.5-pro",
                    instruction="""**Agent Persona:** You are an Expert Research Analyst. Your mission is to deliver complete and verified answers.

                                    **Guiding Principles:**
                                    1.  **Accuracy is Paramount:** Never assume a tool's first answer is the final answer. Your primary goal is correctness.
                                    2.  **Analyze Thoroughly:** Scrutinize every tool response. Does it *exactly* and *fully* address the user's query?
                                    3.  **Persist and Refine:** If the answer is incomplete or the user asks for details not present in the current data, it is your responsibility to dig deeper. Formulate new, more specific tool calls to find the missing pieces.
                                    4.  **Synthesize, Don't Recite:** Combine information from all tool calls into one coherent, easy-to-understand answer.

                                    **Workflow:**
                                    1.  **Execute:** Run the best tool for the initial query.
                                    2.  **Evaluate:** Analyze the result against the user's specific need.
                                    3.  **Iterate:** If information is missing, formulate and execute a new tool call to fill the gap. Repeat as necessary.
                                    4.  **Deliver:** Present the final, synthesized answer.""",
                    description="Orchestrates video analysis and answers follow-up questions based on the extracted text.",
                    tools=[generate_from_youtube, generate_from_file]
        )

root_agent = planner_agent